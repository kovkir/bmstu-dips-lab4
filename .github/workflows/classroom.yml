name: GitHub Classroom Workflow
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install the necessary packages
        run: pip3.10 install -r requirements.txt

      - name: Run unit tests for ticket service
        run: pytest -vs ticket_service/app/unit_tests/ticket.py

      - name: Run unit tests for flight service
        run: pytest -vs flight_service/app/unit_tests/flight.py

  deploy:
    name: Deploy service on VM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2
      
      - name: Docker build
        timeout-minutes: 2
        run:  docker compose build

      - name: Docker Hub login
        env:
          CRYANDEX_PASSWORD: ${{ secrets.CRYANDEX_PASSWORD }}
        run: echo "$CRYANDEX_PASSWORD" | docker login -u oauth --password-stdin cr.yandex

      - name: Docker Publish
        run: docker compose push

      - name: Install Helm
        uses: azure/setup-helm@v3
 
      - name: Prepare Kube config
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
          KUBECONFIG_CA_FILE: '${{ secrets.KUBECONFIG_CA }}'
        run: |
          echo "$KUBECONFIG_FILE" > ./kube.config 
          echo "$KUBECONFIG_CA_FILE" > ./ca.pem
      
      - name: Deploy db
        run: |
          echo ${{ secrets.CRYANDEX_PASSWORD }} | sudo cp ./bonus_database/sql/init_db.sql ./k8s/postgres-chart/bonus-db-init-db.sql |
          echo ${{ secrets.CRYANDEX_PASSWORD }} | sudo cp ./flight_database/sql/init_db.sql ./k8s/postgres-chart/flight-db-init-db.sql |
          echo ${{ secrets.CRYANDEX_PASSWORD }} | sudo cp ./ticket_database/sql/init_db.sql ./k8s/postgres-chart/ticket-db-init-db.sql |
          helm --kubeconfig ./kube.config upgrade --install db ./k8s/postgres-chart
          
      - name: Deploy app
        env:
          POSTGRES_PASSWORD: test
        run: |
           helm --kubeconfig ./kube.config upgrade --install my-app ./k8s/app-chart 

  autograding:
    name: Autograding
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v1/postman/collection.json
          environment: v1/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'
  
  ApiTests:
    name: Run API Tests
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v2/postman/collection.json
          environment: v2/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'
    
      